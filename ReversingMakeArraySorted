# Input : arr [] = {1, 2, 5, 4, 3}
# Output : Yes
# By reversing the subarray {5, 4, 3}, the array will be sorted.

# Input : arr [] = { 1, 2, 4, 5, 3 }
# Output : No

# //Reversing subarray make a array sorted or not 
# Approach : The approach is we check from where our array is not sorted x is indicating from where it begins and y indicating that y is ending point of the subarray from there it
# is not sorted
#include<bits/stdc++.h>
using namespace std;
bool isSorted(int arr[],int n){
    int x = -1;
    int y = -1;
    for(int i = 0; i<n-1; i++){
        if(arr[i] > arr[i+1]){
            if(x == -1){
                x = i;
            }
            else{
                y = i+1;
            }
        }
    }
    if(x != -1){
        # reverse(arr+x,arr+y+1);   //We sort from arrx begin to arr+y ending because array accept begin to ending-1 that's y+1; 
        for(int i = 0;i<n-1; i++){
            if(arr[i] > arr[i+1]){   After reversing we check if the array is sorted or not if it's not sorted we return false else return true;
                return false;
            }
        }
    }
    return true;
}
int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i = 0; i<n; i++){
        cin>>arr[i];
    }
    bool ans = isSorted(arr,n);
    cout<<ans;
}
