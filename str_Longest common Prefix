Approach: first we sort the array then we traverse the first string and last string simultaneously and we insert the characters if the both characters from the string are same 
when the not same character found from both the string we return the result;

class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        string ans;
        sort(strs.begin(),strs.end());
        int n = strs.size();
        string start = strs[0];
        string end = strs[n-1];
        for(int i = 0; i<start.length(); i++){
            if(start[i] != end[i]){        //if it is not same then return the ans;
                return ans;
            }
            ans.push_back(start[i]);       //if it is same insert it into the ans vector
        }
        return ans;

    }
};
